TITLE SUM(EXE) TO FIND SUM FROM 1 TO N
.MODEL SMALL 
.STACK 100H
.DATA
	MSG DB "Enter N:$"
	MSG_DEC DB 0AH, 0DH, 'SUM IN DECIMAL:$'
	MSG_HEX DB 0AH, 0DH, 'SUM IN HEXADECIMAL:$'
	N DW ?		;VAR TO STORE INPUT NUMBER
	SUM DW 0 	;VAR TO STORE SUM

.CODE
MAIN PROC
	MOV AX, @DATA
	MOV DS, AX

	;START WRITING FROM HERE
	LEA DX, MSG	;DISPLAY THE PROMPT
	MOV AH, 09H
	INT 21H

	CALL READ_NUMBER
	MOV N, AX
	MOV CX, N
	MOV AX, 0

SUM_LOOP:
	ADD AX, CX
LOOP SUM_LOOP

	MOV SUM, AX

	LEA DX MSG_DEC
	MOV AH, 09H
	INT 21H
	MOV AX, SUM
CALL PRINT_DECIMAL

	LEA DX, MSG_HEX
	MOV AH, 09H
	INT 21H
	MOV AX, SUM
CALL PRINT_HEX
	MOV AH, 4CH
	INT 21H
MAIN ENDP

READ_NUMBER PROC
	PUSH BX
	PUSH CX
	PUSH DX
	MOV BX, 0

READ_DIGIT:
	MOV AH, 01H
	INT 21H
	CMP AL, 13
JE DONE_READ
	SUB AL, '0'
	MOV CL, AL
	MOV AX, BX
	MOV DX, 10
	MUL DX
	ADD AX, CX
	MOV BX, AX
JMP READ_DIGIT

DONE_READ:
	MOV AX, BX
	POP DX
	POP CX
	POP BX
	RET

READ_NUMBER ENDP

PRINT_DECIMAL PROC
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX
	MOV CX, 0
	MOV BX, 10

CONVERT_DECIMAL:
	XOR DX, DX
	DIV BX
	PUSH DX
	INC CX
	CMP AX, 0
JNE CONVERT_DECIMAL

PRINT_DECIMAL_LOOP:
	POP DX
	MOV DL, '0'
	MOV AH, 02H
	INT 21H
LOOP PRINT_DECIMAL_LOOP

	POP DX
	POP CX
	POP BX
	POP AX
RET

PRINT_DECIMAL ENDP

PRINT_HEX PROC
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX
	MOV CX, 4
	MOV BX, 16

CONVERT_HEX:
	XOR DX, DX
	DIV BX
	PUSH DX
LOOP CONVERT_HEX

	MOV CX, 4

PRINT_HEX_LOOP:
	POP DX
	CMP DL, 9
JBE PRINT_HEX_DIGIT
	ADD DL, 7

PRINT_HEX_DIGIT:
	ADD DL, '0'
	MOV AH, 02H
	INT 21H
LOOP PRINT_HEX_LOOP

	POP DX
	POP CX
	POP BX
	POP AX
	RET

PRINT_HEX ENDP

END MAIN
